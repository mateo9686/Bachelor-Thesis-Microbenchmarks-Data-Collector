{
  "Name": "polydawn/repeatr",
  "Path": "./repositories/polydawn__repeatr",
  "GoVersion": "n/a",
  "BenchmarkData": {
    "timestamp": "2023-10-24T12:57:32Z",
    "benchmarkCount": 0,
    "benchmarkSuiteCount": 0,
    "successfulBenchmarkCount": 0,
    "successfulBenchmarkSuitesCount": 0,
    "goos": "n/a",
    "goarch": "n/a",
    "suites": []
  },
  "GitRepo": {
    "full_name": "polydawn/repeatr",
    "name": "repeatr",
    "private": false,
    "html_url": "https://github.com/polydawn/repeatr",
    "description": "Repeatr: Reproducible, hermetic Computation.  Provision containers from Content-Addressable snapshots; run using familiar containers (e.g. runc); store outputs in Content-Addressable form too!  JSON API; connect your own pipelines!  (Or, use github.com/polydawn/stellar for pipelines!)",
    "fork": false,
    "created_at": "2015-02-27T18:12:08Z",
    "updated_at": "2023-04-14T20:38:19Z",
    "pushed_at": "2020-03-27T09:55:58Z",
    "ssh_url": "git@github.com:polydawn/repeatr.git",
    "homepage": "https://repeatr.io",
    "stargazers_count": 67,
    "watchers_count": 67,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "has_discussions": false,
    "forks": 5,
    "language": "Go",
    "archived": false,
    "disabled": false,
    "open_issues": 5,
    "topics": [
      "containers",
      "distributed",
      "formula",
      "reproducibility",
      "reproducible-builds",
      "snapshots",
      "timeless",
      "timeless-stack"
    ],
    "allow_forking": true,
    "is_template": false,
    "cloning_error": "",
    "score": 1,
    "license": {
      "key": "apache-2.0",
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0",
      "spdx_id": "Apache-2.0",
      "node_id": "MDc6TGljZW5zZTI=",
      "html_url": ""
    }
  },
  "CodeStatistics": {
    "Count": 37,
    "Lines": 2964,
    "Blank": 287,
    "Code": 2335,
    "Comment": 342,
    "Bytes": 81743,
    "Complexity": 332
  }
}