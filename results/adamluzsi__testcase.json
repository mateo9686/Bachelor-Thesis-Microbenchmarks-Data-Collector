{
  "Name": "adamluzsi/testcase",
  "Path": "./repositories/adamluzsi__testcase",
  "GoVersion": "1.18",
  "BenchmarkData": {
    "timestamp": "2023-10-25T20:37:29Z",
    "benchmarkCount": 49,
    "benchmarkSuiteCount": 3,
    "successfulBenchmarkCount": 44,
    "successfulBenchmarkSuitesCount": 3,
    "goos": "linux",
    "goarch": "amd64",
    "suites": [
      {
        "pkg": "go.llib.dev/testcase",
        "succeded": true,
        "duration": "14.324s",
        "benchmarks": [
          {
            "name": "BenchmarkOutput/#A/bar-12",
            "runs": 1042,
            "nsPerOp": 1147860,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkOutput/#A/baz-12",
            "runs": 1094,
            "nsPerOp": 1122765,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkOutput/#A/foo-12",
            "runs": 1023,
            "nsPerOp": 1137441,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkOutput/#B/bar-12",
            "runs": 994,
            "nsPerOp": 1210025,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkOutput/#B/baz-12",
            "runs": 949,
            "nsPerOp": 1225370,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkOutput/#B/foo-12",
            "runs": 948,
            "nsPerOp": 1202259,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkTest_Spec/#00/Spec_test.go:660-12",
            "runs": 975,
            "nsPerOp": 1255730,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkTest_Spec_hooksInBenchmarkCalledInEachRun/#00/Spec_test.go:872-12",
            "runs": 992,
            "nsPerOp": 1216774,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkTestRunOpenSuite/when_TB_is_*testing.B/testcaseOpenSuiteAdapter-12",
            "runs": 1000000000,
            "nsPerOp": 0.0000461,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkTestRunOpenSuite/when_TB_is_*testcase.T_with_*testing.B_under_the_hood/testcaseOpenSuiteAdapter-12",
            "runs": 1000000000,
            "nsPerOp": 0.0000396,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkT_varDoesNotCountTowardsRun/run-12",
            "runs": 1,
            "nsPerOp": 1000839417,
            "succeded": true,
            "failureDesc": ""
          }
        ],
        "benchmarkModificationInfo": [
          {
            "name": "BenchmarkOutput",
            "modificationCount": 3,
            "createdOn": "2020-05-25",
            "lastUpdateOn": "2020-11-27"
          },
          {
            "name": "BenchmarkOutput",
            "modificationCount": 3,
            "createdOn": "2020-05-25",
            "lastUpdateOn": "2020-11-27"
          },
          {
            "name": "BenchmarkOutput",
            "modificationCount": 3,
            "createdOn": "2020-05-25",
            "lastUpdateOn": "2020-11-27"
          },
          {
            "name": "BenchmarkOutput",
            "modificationCount": 3,
            "createdOn": "2020-05-25",
            "lastUpdateOn": "2020-11-27"
          },
          {
            "name": "BenchmarkOutput",
            "modificationCount": 3,
            "createdOn": "2020-05-25",
            "lastUpdateOn": "2020-11-27"
          },
          {
            "name": "BenchmarkOutput",
            "modificationCount": 3,
            "createdOn": "2020-05-25",
            "lastUpdateOn": "2020-11-27"
          },
          {
            "name": "BenchmarkTest_Spec",
            "modificationCount": 6,
            "createdOn": "2020-04-30",
            "lastUpdateOn": "2021-10-20"
          },
          {
            "name": "BenchmarkTest_Spec_hooksInBenchmarkCalledInEachRun",
            "modificationCount": 6,
            "createdOn": "2020-11-25",
            "lastUpdateOn": "2022-05-31"
          },
          {
            "name": "BenchmarkTestRunOpenSuite",
            "modificationCount": 5,
            "createdOn": "2021-02-08",
            "lastUpdateOn": "2022-05-31"
          },
          {
            "name": "BenchmarkTestRunOpenSuite",
            "modificationCount": 5,
            "createdOn": "2021-02-08",
            "lastUpdateOn": "2022-05-31"
          },
          {
            "name": "BenchmarkT_varDoesNotCountTowardsRun",
            "modificationCount": 2,
            "createdOn": "2022-03-28",
            "lastUpdateOn": "2022-05-25"
          }
        ]
      },
      {
        "pkg": "go.llib.dev/testcase/assert",
        "succeded": false,
        "duration": "475.976s",
        "benchmarks": [
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_will_allow_further_retries_even_over_the_fist_assertion_block_evaluation_and_it_fails_with_FailNow_then_it_will_ensure_that_Cleanup_was_executed-12",
            "runs": 303,
            "nsPerOp": 4036905,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_allow_multiple_condition_then_it_will_not_use_up_list_the_retry_strategy_loop_iterations_because_the_condition_doesnt_need_it-12",
            "runs": 10000,
            "nsPerOp": 108503,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_dont_allow_further_retries_other_than_the_first_evaluation_then_it_will_fail_the_test-12",
            "runs": 12721,
            "nsPerOp": 79244,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_allow_multiple_condition_and_assertion_fails_a_few_times_but_then_yields_success_then_failed_runs_cleanup_after_themselves-12",
            "runs": 2481,
            "nsPerOp": 405925,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_will_allow_further_retries_even_over_the_fist_assertion_block_evaluation_and_and_multiple_assertion_event_sent_to_testingTB_then_cleanup_is_forwarded_regardless_the_failed_error-12",
            "runs": 534,
            "nsPerOp": 2344242,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_will_not_retry_the_assertion_block_after_the_first_execution_and_and_multiple_assertion_event_sent_to_testingTB_then_cleanup_is_forwarded-12",
            "runs": 21951,
            "nsPerOp": 138286,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_dont_allow_further_retries_other_than_the_first_evaluation_then_it_will_execute_the_assertion_at_least_once-12",
            "runs": 10000,
            "nsPerOp": 112047,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_original_testingTBs_FailNow_is_called_then_the_assertion_wont_be_retried-12",
            "runs": 7516,
            "nsPerOp": 206789,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_dont_allow_further_retries_other_than_the_first_evaluation_and_and_multiple_assertion_event_sent_to_testingTB_then_cleanup_is_forwarded_regardless_the_failed_error-12",
            "runs": 24975,
            "nsPerOp": 105732,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_will_allow_further_retries_even_over_the_fist_assertion_block_evaluation_then_it_will_fail_the_test-12",
            "runs": 1947,
            "nsPerOp": 867343,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_dont_allow_further_retries_other_than_the_first_evaluation_and_and_multiple_assertion_event_sent_to_testingTB_then_list_events_replied_to_the_passed_testingTB-12",
            "runs": 10000,
            "nsPerOp": 113172,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_original_testingTBs_Fail_is_called_then_the_assertion_wont_be_retried-12",
            "runs": 14863,
            "nsPerOp": 119662,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_allow_multiple_condition_but_it_will_fail_during_the_Cleanup_then_then_cleanup_is_replied_to_the_test_subject-12",
            "runs": 35864,
            "nsPerOp": 28031,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_allow_multiple_condition_then_it_will_execute_the_condition_only_for_the_required_required_amount_of_times-12",
            "runs": 28951,
            "nsPerOp": 112676,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_will_allow_further_retries_even_over_the_fist_assertion_block_evaluation_then_it_will_execute_the_condition_multiple_times-12",
            "runs": 841,
            "nsPerOp": 1784730,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_will_allow_further_retries_even_over_the_fist_assertion_block_evaluation_and_it_fails_with_FailNow_then_it_will_fail_the_test-12",
            "runs": 562,
            "nsPerOp": 1793816,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_allow_multiple_condition_and_and_multiple_assertion_event_sent_to_testingTB_then_list_events_replied_to_the_passed_testingTB-12",
            "runs": 30064,
            "nsPerOp": 62674,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_will_not_retry_the_assertion_block_after_the_first_execution_and_and_multiple_assertion_event_sent_to_testingTB_then_list_events_replied_to_the_passed_testingTB-12",
            "runs": 10000,
            "nsPerOp": 122661,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_allow_multiple_condition_and_and_multiple_assertion_event_sent_to_testingTB_then_cleanup_is_forwarded-12",
            "runs": 8985,
            "nsPerOp": 116596,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_will_not_retry_the_assertion_block_after_the_first_execution_then_it_will_execute_the_condition_at_least_once-12",
            "runs": 32425,
            "nsPerOp": 41978,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_original_testingTBs_Fail_is_called_and_the_original_testing_tb_was_already_failed_then_the_assertion_retry_is_acceptable_since_it_is_not_necessarily_related_to_our_act-12",
            "runs": 873,
            "nsPerOp": 1337267,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_will_allow_further_retries_even_over_the_fist_assertion_block_evaluation_and_and_multiple_assertion_event_sent_to_testingTB_then_list_events_replied_to_the_passed_testingTB-12",
            "runs": 1076,
            "nsPerOp": 1377574,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_will_not_retry_the_assertion_block_after_the_first_execution_then_it_will_not_mark_the_passed_TB_as_failed-12",
            "runs": 41860,
            "nsPerOp": 29433,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_fails_and_strategy_will_allow_further_retries_even_over_the_fist_assertion_block_evaluation_then_it_will_run_for_as_long_as_the_wait_timeout_duration-12",
            "runs": 1880,
            "nsPerOp": 929732,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkEventually/Assert/when_the_assertion_returns_with_list_happy_and_strategy_allow_multiple_condition_then_it_will_not_mark_the_passed_TB_as_failed-12",
            "runs": 12841,
            "nsPerOp": 78966,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkWaiter/#Wait/when_sleep_time_is_set_then_it_should_around_the_WaitDuration_defined_time-12",
            "runs": 0,
            "nsPerOp": 0,
            "succeded": false,
            "failureDesc": "---"
          },
          {
            "name": "BenchmarkWaiter/#Wait/when_sleep_time_is_not_set_zero_value_then_calling_wait_will_have_at_least_the_wait_sleep_duration-12",
            "runs": 0,
            "nsPerOp": 0,
            "succeded": false,
            "failureDesc": "---"
          },
          {
            "name": "BenchmarkWaiter/#Wait/when_sleep_time_is_set_then_calling_wait_will_have_at_least_the_wait_sleep_duration-12",
            "runs": 1136,
            "nsPerOp": 1062874,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkWaiter/#Wait/when_sleep_time_is_not_set_zero_value_then_it_should_around_the_WaitDuration_defined_time-12",
            "runs": 0,
            "nsPerOp": 0,
            "succeded": false,
            "failureDesc": "---"
          },
          {
            "name": "BenchmarkWaiter/#While/when_the_condition_never_returns_with_wait_no_longer_needed_true_and_wait_timeout_is_longer_than_what_it_takes_to_run_condition_evaluation_even_multiple_times_then_it_will_execute_the_condition_multiple_times-12",
            "runs": 162,
            "nsPerOp": 6913046,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkWaiter/#While/when_the_condition_quickly_returns_with_done_false_and_wait_timeout_is_shorter_that_the_time_it_takes_to_evaluate_the_condition_then_it_will_execute_the_condition_at_least_once-12",
            "runs": 984,
            "nsPerOp": 1385472,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkWaiter/#While/when_the_condition_never_returns_with_wait_no_longer_needed_true_and_wait_timeout_is_longer_than_what_it_takes_to_run_condition_evaluation_even_multiple_times_then_it_will_run_for_as_long_as_the_wait_timeout_duration-12",
            "runs": 163,
            "nsPerOp": 7550131,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkWaiter/#While/when_the_condition_quickly_returns_with_done_false_and_wait_timeout_is_longer_than_what_it_takes_to_run_condition_evaluation_even_multiple_times_then_it_will_execute_the_condition_only_for_the_required_required_amount_of_times-12",
            "runs": 42296,
            "nsPerOp": 28276,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkWaiter/#While/when_the_condition_never_returns_with_wait_no_longer_needed_true_and_wait_timeout_is_shorter_that_the_time_it_takes_to_evaluate_the_condition_then_it_will_execute_the_condition_at_least_once-12",
            "runs": 1039,
            "nsPerOp": 1180543,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkWaiter/#While/when_the_condition_quickly_returns_with_done_false_and_wait_timeout_is_longer_than_what_it_takes_to_run_condition_evaluation_even_multiple_times_then_it_will_not_use_up_list_the_time_that_wait_time_allows_because_the_condition_doesnt_need_it-12",
            "runs": 0,
            "nsPerOp": 0,
            "succeded": false,
            "failureDesc": "---"
          },
          {
            "name": "BenchmarkWaiter",
            "runs": 0,
            "nsPerOp": 0,
            "succeded": false,
            "failureDesc": "Log.go:16:"
          }
        ],
        "benchmarkModificationInfo": [
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkEventually",
            "modificationCount": 5,
            "createdOn": "2020-11-16",
            "lastUpdateOn": "2023-10-17"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          },
          {
            "name": "BenchmarkWaiter",
            "modificationCount": 1,
            "createdOn": "2021-01-11",
            "lastUpdateOn": "2021-01-11"
          }
        ]
      },
      {
        "pkg": "go.llib.dev/testcase/random",
        "succeded": true,
        "duration": "3.931s",
        "benchmarks": [
          {
            "name": "BenchmarkFactory/cached-12",
            "runs": 491653,
            "nsPerOp": 2255,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkFactory/clean-12",
            "runs": 162021,
            "nsPerOp": 6494,
            "succeded": true,
            "failureDesc": ""
          }
        ],
        "benchmarkModificationInfo": [
          {
            "name": "BenchmarkFactory",
            "modificationCount": 2,
            "createdOn": "2022-04-13",
            "lastUpdateOn": "2022-04-14"
          },
          {
            "name": "BenchmarkFactory",
            "modificationCount": 2,
            "createdOn": "2022-04-13",
            "lastUpdateOn": "2022-04-14"
          }
        ]
      }
    ]
  },
  "GitRepo": {
    "full_name": "adamluzsi/testcase",
    "name": "testcase",
    "private": false,
    "html_url": "https://github.com/adamluzsi/testcase",
    "description": "testcase is an opinionated testing framework to support test driven design.",
    "fork": false,
    "created_at": "2019-04-22T21:20:51Z",
    "updated_at": "2023-09-20T12:56:31Z",
    "pushed_at": "2023-10-19T19:00:56Z",
    "ssh_url": "git@github.com:adamluzsi/testcase.git",
    "stargazers_count": 114,
    "watchers_count": 114,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "has_discussions": true,
    "forks": 10,
    "language": "Go",
    "archived": false,
    "disabled": false,
    "open_issues": 0,
    "topics": [
      "bdd",
      "behavior-driven-development",
      "chaos-engineering",
      "fault-injection",
      "go",
      "golang",
      "tdd",
      "test",
      "test-driven-design",
      "test-framework",
      "testing",
      "testing-tools",
      "tests",
      "toolkit"
    ],
    "allow_forking": true,
    "is_template": false,
    "cloning_error": "",
    "score": 1,
    "license": {
      "key": "apache-2.0",
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0",
      "spdx_id": "Apache-2.0",
      "node_id": "MDc6TGljZW5zZTI=",
      "html_url": ""
    }
  },
  "CodeStatistics": {
    "Count": 211,
    "Lines": 29834,
    "Blank": 3375,
    "Code": 25492,
    "Comment": 967,
    "Bytes": 735398,
    "Complexity": 1222
  }
}