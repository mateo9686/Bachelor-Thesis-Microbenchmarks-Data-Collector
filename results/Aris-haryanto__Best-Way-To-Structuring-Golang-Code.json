{
  "Name": "Aris-haryanto/Best-Way-To-Structuring-Golang-Code",
  "Path": "./repositories/Aris-haryanto__Best-Way-To-Structuring-Golang-Code",
  "GoVersion": "1.19",
  "BenchmarkData": {
    "timestamp": "2023-10-23T19:25:19Z",
    "benchmarkCount": 0,
    "benchmarkSuiteCount": 0,
    "successfulBenchmarkCount": 0,
    "successfulBenchmarkSuitesCount": 0,
    "goos": "n/a",
    "goarch": "n/a",
    "suites": []
  },
  "GitRepo": {
    "full_name": "Aris-haryanto/Best-Way-To-Structuring-Golang-Code",
    "name": "Best-Way-To-Structuring-Golang-Code",
    "private": false,
    "html_url": "https://github.com/Aris-haryanto/Best-Way-To-Structuring-Golang-Code",
    "description": "This is example for how to designing a simple, clear, easy to read, and powefull structure in golang",
    "fork": false,
    "created_at": "2022-12-04T13:13:19Z",
    "updated_at": "2023-10-08T23:55:38Z",
    "pushed_at": "2023-03-10T14:55:29Z",
    "ssh_url": "git@github.com:Aris-haryanto/Best-Way-To-Structuring-Golang-Code.git",
    "stargazers_count": 26,
    "watchers_count": 26,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "has_discussions": false,
    "forks": 4,
    "language": "Go",
    "archived": false,
    "disabled": false,
    "open_issues": 0,
    "topics": [
      "architecture",
      "go",
      "go-architecture",
      "golang",
      "golang-architect",
      "grpc",
      "protobuf"
    ],
    "allow_forking": true,
    "is_template": false,
    "cloning_error": "",
    "score": 1,
    "license": {
      "key": "",
      "name": "",
      "node_id": "",
      "html_url": ""
    }
  },
  "CodeStatistics": {
    "Count": 14,
    "Lines": 760,
    "Blank": 137,
    "Code": 530,
    "Comment": 93,
    "Bytes": 21403,
    "Complexity": 65
  }
}