{
  "Name": "yarspirin/keylock",
  "Path": "./repositories/yarspirin__keylock",
  "GoVersion": "n/a",
  "BenchmarkData": {
    "timestamp": "2023-10-25T09:16:30Z",
    "benchmarkCount": 0,
    "benchmarkSuiteCount": 0,
    "successfulBenchmarkCount": 0,
    "successfulBenchmarkSuitesCount": 0,
    "goos": "n/a",
    "goarch": "n/a",
    "suites": []
  },
  "GitRepo": {
    "full_name": "yarspirin/keylock",
    "name": "keylock",
    "private": false,
    "html_url": "https://github.com/yarspirin/keylock",
    "description": "A Golang utility package which provides a way to lock a set of keys so that any subsequent call with a non-empty subset of already locked keys makes the goroutine waiting.",
    "fork": false,
    "created_at": "2020-06-17T15:37:29Z",
    "updated_at": "2023-10-12T21:27:23Z",
    "pushed_at": "2020-06-19T12:05:12Z",
    "ssh_url": "git@github.com:yarspirin/keylock.git",
    "stargazers_count": 85,
    "watchers_count": 85,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "has_discussions": false,
    "forks": 9,
    "language": "Go",
    "archived": false,
    "disabled": false,
    "open_issues": 1,
    "topics": [
      "golang"
    ],
    "allow_forking": true,
    "is_template": false,
    "cloning_error": "",
    "score": 1,
    "license": {
      "key": "apache-2.0",
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0",
      "spdx_id": "Apache-2.0",
      "node_id": "MDc6TGljZW5zZTI=",
      "html_url": ""
    }
  },
  "CodeStatistics": {
    "Count": 3,
    "Lines": 263,
    "Blank": 54,
    "Code": 209,
    "Comment": 0,
    "Bytes": 4240,
    "Complexity": 33
  }
}