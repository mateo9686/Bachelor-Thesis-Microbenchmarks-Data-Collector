{
  "Name": "leodido/go-conventionalcommits",
  "Path": "./repositories/leodido__go-conventionalcommits",
  "GoVersion": "1.16",
  "BenchmarkData": {
    "timestamp": "2023-10-24T11:31:40Z",
    "benchmarkCount": 30,
    "benchmarkSuiteCount": 1,
    "successfulBenchmarkCount": 30,
    "successfulBenchmarkSuitesCount": 1,
    "goos": "linux",
    "goarch": "amd64",
    "suites": [
      {
        "pkg": "github.com/leodido/go-conventionalcommits/parser",
        "succeded": true,
        "duration": "59.991s",
        "benchmarks": [
          {
            "name": "BenchmarkSlimParseMinimalTypes/[ok]_minimal______________________________________-12",
            "runs": 2647543,
            "nsPerOp": 481.3,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[ok]_minimal_with_scope___________________________-12",
            "runs": 1692529,
            "nsPerOp": 618.9,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[ok]_minimal_breaking_with_scope__________________-12",
            "runs": 1873718,
            "nsPerOp": 630.9,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[ok]_full_with_50_characters_long_description_____-12",
            "runs": 1417814,
            "nsPerOp": 734.3,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[ok]_with_body_and_footer_________________________-12",
            "runs": 153601,
            "nsPerOp": 10222,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[ok]_with_body____________________________________-12",
            "runs": 158341,
            "nsPerOp": 7652,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[ok]_with_footer_containing_one_trailer___________-12",
            "runs": 720058,
            "nsPerOp": 2645,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[ok]_with_footer_containing_many_trailers_________-12",
            "runs": 358597,
            "nsPerOp": 3942,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[no]_empty________________________________________-12",
            "runs": 1920940,
            "nsPerOp": 747.3,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[no]_type_but_missing_colon_______________________-12",
            "runs": 1343006,
            "nsPerOp": 836.3,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[no]_type_but_missing_description_________________-12",
            "runs": 1000000,
            "nsPerOp": 1176,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[no]_type_and_scope_but_missing_description_______-12",
            "runs": 934742,
            "nsPerOp": 1317,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[no]_breaking_with_type_and_scope_but_missing_desc-12",
            "runs": 1022012,
            "nsPerOp": 1636,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[~~]_newline_in_description_______________________-12",
            "runs": 980104,
            "nsPerOp": 1434,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes/[no]_missing_whitespace_in_description____________-12",
            "runs": 917850,
            "nsPerOp": 1236,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[ok]_minimal______________________________________-12",
            "runs": 2400688,
            "nsPerOp": 485.7,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[ok]_minimal_with_scope___________________________-12",
            "runs": 1884262,
            "nsPerOp": 553.5,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[ok]_minimal_breaking_with_scope__________________-12",
            "runs": 1750828,
            "nsPerOp": 757.7,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[ok]_full_with_50_characters_long_description_____-12",
            "runs": 1480948,
            "nsPerOp": 899.5,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[ok]_with_body_and_footer_________________________-12",
            "runs": 102796,
            "nsPerOp": 11943,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[ok]_with_body____________________________________-12",
            "runs": 117258,
            "nsPerOp": 9989,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[ok]_with_footer_containing_one_trailer___________-12",
            "runs": 856527,
            "nsPerOp": 5217,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[ok]_with_footer_containing_many_trailers_________-12",
            "runs": 181102,
            "nsPerOp": 14255,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[no]_empty________________________________________-12",
            "runs": 1000000,
            "nsPerOp": 2723,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[no]_type_but_missing_colon_______________________-12",
            "runs": 641166,
            "nsPerOp": 2305,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[no]_type_but_missing_description_________________-12",
            "runs": 488485,
            "nsPerOp": 3085,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[no]_type_and_scope_but_missing_description_______-12",
            "runs": 655054,
            "nsPerOp": 1693,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[no]_breaking_with_type_and_scope_but_missing_desc-12",
            "runs": 736611,
            "nsPerOp": 1385,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[~~]_newline_in_description_______________________-12",
            "runs": 505900,
            "nsPerOp": 2119,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes/[no]_missing_whitespace_in_description____________-12",
            "runs": 421983,
            "nsPerOp": 3176,
            "succeded": true,
            "failureDesc": ""
          }
        ],
        "benchmarkModificationInfo": [
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseMinimalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          },
          {
            "name": "BenchmarkSlimParseConventionalTypes",
            "modificationCount": 1,
            "createdOn": "2020-11-28",
            "lastUpdateOn": "2020-11-28"
          }
        ]
      }
    ]
  },
  "GitRepo": {
    "full_name": "leodido/go-conventionalcommits",
    "name": "go-conventionalcommits",
    "private": false,
    "html_url": "https://github.com/leodido/go-conventionalcommits",
    "description": "Fu powers to parse your commit messages as the Conventional Commits specification demands.",
    "fork": false,
    "created_at": "2020-11-18T18:53:05Z",
    "updated_at": "2023-09-15T12:47:31Z",
    "pushed_at": "2023-02-27T13:47:45Z",
    "ssh_url": "git@github.com:leodido/go-conventionalcommits.git",
    "stargazers_count": 62,
    "watchers_count": 62,
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "has_discussions": false,
    "forks": 5,
    "language": "Go",
    "archived": false,
    "disabled": false,
    "open_issues": 1,
    "topics": [
      "commit-message",
      "commitlint",
      "conventional-commits",
      "golang",
      "hacktoberfest",
      "parser",
      "ragel"
    ],
    "allow_forking": true,
    "is_template": false,
    "cloning_error": "",
    "score": 1,
    "license": {
      "key": "apache-2.0",
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0",
      "spdx_id": "Apache-2.0",
      "node_id": "MDc6TGljZW5zZTI=",
      "html_url": ""
    }
  },
  "CodeStatistics": {
    "Count": 11,
    "Lines": 7622,
    "Blank": 355,
    "Code": 6842,
    "Comment": 425,
    "Bytes": 161681,
    "Complexity": 686
  }
}