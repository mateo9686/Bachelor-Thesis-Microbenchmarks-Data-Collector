{
  "Name": "datreeio/datree",
  "Path": "./repositories/datreeio__datree",
  "GoVersion": "1.19",
  "BenchmarkData": {
    "timestamp": "2023-10-27T01:04:25Z",
    "benchmarkCount": 0,
    "benchmarkSuiteCount": 0,
    "successfulBenchmarkCount": 0,
    "successfulBenchmarkSuitesCount": 0,
    "goos": "n/a",
    "goarch": "n/a",
    "suites": []
  },
  "GitRepo": {
    "full_name": "datreeio/datree",
    "name": "datree",
    "private": false,
    "html_url": "https://github.com/datreeio/datree",
    "description": "Prevent Kubernetes misconfigurations from reaching production (again ðŸ˜¤ )! From code to cloud, Datree provides an E2E policy enforcement solution to run automatic checks for rule violations. See our docs: https://hub.datree.io",
    "fork": false,
    "created_at": "2021-04-14T11:44:56Z",
    "updated_at": "2023-10-23T11:09:30Z",
    "pushed_at": "2023-10-18T15:48:24Z",
    "ssh_url": "git@github.com:datreeio/datree.git",
    "homepage": "https://datree.io",
    "stargazers_count": 6365,
    "watchers_count": 6365,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "has_discussions": true,
    "forks": 356,
    "language": "Go",
    "archived": false,
    "disabled": false,
    "open_issues": 24,
    "topics": [
      "admission-webhook",
      "best-practices",
      "cli",
      "datree",
      "devops",
      "guardrail",
      "kubernetes",
      "policy",
      "policy-management",
      "security",
      "static-code-analysis"
    ],
    "allow_forking": true,
    "is_template": false,
    "cloning_error": "",
    "score": 1,
    "license": {
      "key": "apache-2.0",
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0",
      "spdx_id": "Apache-2.0",
      "node_id": "MDc6TGljZW5zZTI=",
      "html_url": ""
    }
  },
  "CodeStatistics": {
    "Count": 90,
    "Lines": 12850,
    "Blank": 1940,
    "Code": 10786,
    "Comment": 124,
    "Bytes": 386718,
    "Complexity": 1351
  }
}