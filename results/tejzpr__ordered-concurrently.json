{
  "Name": "tejzpr/ordered-concurrently",
  "Path": "./repositories/tejzpr__ordered-concurrently",
  "GoVersion": "1.12",
  "BenchmarkData": {
    "timestamp": "2023-10-23T19:08:15Z",
    "benchmarkCount": 3,
    "benchmarkSuiteCount": 1,
    "successfulBenchmarkCount": 3,
    "successfulBenchmarkSuitesCount": 1,
    "goos": "linux",
    "goarch": "amd64",
    "suites": [
      {
        "pkg": "github.com/tejzpr/ordered-concurrently/v3",
        "succeded": true,
        "duration": "15.082s",
        "benchmarks": [
          {
            "name": "BenchmarkOC-12",
            "runs": 1000000000,
            "nsPerOp": 0.3052,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkOCLoad-12",
            "runs": 1000000000,
            "nsPerOp": 0.09833,
            "succeded": true,
            "failureDesc": ""
          },
          {
            "name": "BenchmarkOC2-12",
            "runs": 1000000000,
            "nsPerOp": 0.3623,
            "succeded": true,
            "failureDesc": ""
          }
        ],
        "benchmarkModificationInfo": [
          {
            "name": "BenchmarkOC",
            "modificationCount": 5,
            "createdOn": "2021-03-12",
            "lastUpdateOn": "2021-09-22"
          },
          {
            "name": "BenchmarkOCLoad",
            "modificationCount": 3,
            "createdOn": "2021-03-13",
            "lastUpdateOn": "2021-09-22"
          },
          {
            "name": "BenchmarkOC2",
            "modificationCount": 2,
            "createdOn": "2021-03-13",
            "lastUpdateOn": "2021-09-22"
          }
        ]
      }
    ]
  },
  "GitRepo": {
    "full_name": "tejzpr/ordered-concurrently",
    "name": "ordered-concurrently",
    "private": false,
    "html_url": "https://github.com/tejzpr/ordered-concurrently",
    "description": "Ordered-concurrently a library for concurrent processing with ordered output in Go. Process work concurrently and returns output in a channel in the order of input. It is useful in concurrently processing items in a queue, and get output in the order provided by the queue.",
    "fork": false,
    "created_at": "2021-02-28T17:56:05Z",
    "updated_at": "2023-09-22T19:36:32Z",
    "pushed_at": "2023-04-24T23:24:20Z",
    "ssh_url": "git@github.com:tejzpr/ordered-concurrently.git",
    "stargazers_count": 25,
    "watchers_count": 25,
    "has_issues": true,
    "has_projects": false,
    "has_downloads": true,
    "has_wiki": true,
    "has_pages": false,
    "has_discussions": false,
    "forks": 7,
    "language": "Go",
    "archived": false,
    "disabled": false,
    "open_issues": 3,
    "topics": [
      "concurrent",
      "concurrent-data-structure",
      "data-pipeline",
      "data-science",
      "golang",
      "golang-library",
      "ordered",
      "parallel",
      "parallel-computing"
    ],
    "allow_forking": true,
    "is_template": false,
    "cloning_error": "",
    "score": 1,
    "license": {
      "key": "bsd-3-clause",
      "name": "BSD 3-Clause \"New\" or \"Revised\" License",
      "url": "https://api.github.com/licenses/bsd-3-clause",
      "spdx_id": "BSD-3-Clause",
      "node_id": "MDc6TGljZW5zZTU=",
      "html_url": ""
    }
  },
  "CodeStatistics": {
    "Count": 3,
    "Lines": 446,
    "Blank": 50,
    "Code": 384,
    "Comment": 12,
    "Bytes": 9771,
    "Complexity": 71
  }
}