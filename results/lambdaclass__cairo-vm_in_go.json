{
  "Name": "lambdaclass/cairo-vm_in_go",
  "Path": "./repositories/lambdaclass__cairo-vm_in_go",
  "GoVersion": "1.20",
  "BenchmarkData": {
    "timestamp": "2023-10-24T03:04:17Z",
    "benchmarkCount": 0,
    "benchmarkSuiteCount": 0,
    "successfulBenchmarkCount": 0,
    "successfulBenchmarkSuitesCount": 0,
    "goos": "n/a",
    "goarch": "n/a",
    "suites": []
  },
  "GitRepo": {
    "full_name": "lambdaclass/cairo-vm_in_go",
    "name": "cairo-vm_in_go",
    "private": false,
    "html_url": "https://github.com/lambdaclass/cairo-vm_in_go",
    "description": "cairo-vm_in_go is a Go implementation of the Cairo VM. Cairo (CPU Algebraic Intermediate Representation) is a programming language for writing provable programs, where one party can prove to another that a certain computation was executed correctly without the need for this party to re-execute the same program.",
    "fork": false,
    "created_at": "2023-07-28T15:50:08Z",
    "updated_at": "2023-10-01T22:08:17Z",
    "pushed_at": "2023-10-23T18:31:46Z",
    "ssh_url": "git@github.com:lambdaclass/cairo-vm_in_go.git",
    "stargazers_count": 41,
    "watchers_count": 41,
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "has_discussions": false,
    "forks": 7,
    "language": "Go",
    "archived": false,
    "disabled": false,
    "open_issues": 52,
    "topics": [],
    "allow_forking": true,
    "is_template": false,
    "cloning_error": "",
    "score": 1,
    "license": {
      "key": "apache-2.0",
      "name": "Apache License 2.0",
      "url": "https://api.github.com/licenses/apache-2.0",
      "spdx_id": "Apache-2.0",
      "node_id": "MDc6TGljZW5zZTI=",
      "html_url": ""
    }
  },
  "CodeStatistics": {
    "Count": 118,
    "Lines": 24480,
    "Blank": 3273,
    "Code": 19819,
    "Comment": 1388,
    "Bytes": 747795,
    "Complexity": 4076
  }
}